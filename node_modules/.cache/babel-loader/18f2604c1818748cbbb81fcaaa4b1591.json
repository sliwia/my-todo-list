{"ast":null,"code":"var _jsxFileName = \"/Users/liwia/Documents/Prywatne/rekrutacja/my-todo-list/src/components/MyToDoList/MyToDoList.js\";\nimport React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { AddBox, Delete, Edit } from '@material-ui/icons';\nimport Paper from '@material-ui/core/Paper';\nimport * as actionTypes from '../../store/actions';\nimport './MyToDoList.scss';\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  })));\n}\n\nconst MyToDoList = ({\n  newToDoList,\n  onNewToDo,\n  onEditToDo,\n  onDelToDo\n}) => {\n  const [open, setOpen] = useState(false);\n  const [currentNumber, setCurrentNumber] = useState('');\n  const [currentTitle, setCurrentTitle] = useState('');\n  const [currentEstimation, setCurrentEstimation] = useState(0);\n  const [currentStatus, setCurrentStatus] = useState('toDo');\n  const [currentDescription, setCurrentDescription] = useState('');\n  const [isEdit, setIsEdit] = useState(false);\n  const [editedId, setEditedId] = useState(null);\n\n  const handleClickNewTicket = () => {\n    setOpen(true);\n    setIsEdit(false);\n  };\n\n  const resetFields = () => {\n    setIsEdit(false);\n    setCurrentNumber('');\n    setCurrentTitle('');\n    setCurrentEstimation(0);\n    setCurrentStatus('toDo');\n    setCurrentDescription('');\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setIsEdit(false);\n    resetFields();\n  };\n\n  const getNextId = () => {\n    if (newToDoList.length) {\n      let newId = 0;\n      newToDoList.forEach(element => {\n        if (element.id > newId) {\n          newId = element.id;\n        }\n      });\n      return newId + 1;\n    } else {\n      return 1;\n    }\n  };\n\n  const addUpdateTask = () => {\n    if (isEdit) {\n      onEditToDo(editedId, currentNumber, currentTitle, currentEstimation, currentStatus, currentDescription);\n    } else {\n      onNewToDo(getNextId(), currentNumber, currentTitle, currentEstimation, currentStatus, currentDescription);\n    }\n\n    setIsEdit(false);\n    resetFields();\n    setOpen(false);\n  };\n\n  const handleChangeNumber = event => setCurrentNumber(event.target.value);\n\n  const handleChangeTitle = event => setCurrentTitle(event.target.value);\n\n  const handleChangeEstimation = event => setCurrentEstimation(event.target.value);\n\n  const handleChangeSelect = event => setCurrentStatus(event.target.value);\n\n  const handleChangeDescription = event => setCurrentDescription(event.target.value);\n\n  const editTicket = id => {\n    let currentData;\n    newToDoList.forEach(element => {\n      if (element.id === id) {\n        currentData = element;\n      }\n    });\n    setCurrentNumber(currentData.number);\n    setCurrentTitle(currentData.title);\n    setCurrentEstimation(currentData.estimation);\n    setCurrentStatus(currentData.status);\n    setCurrentDescription(currentData.description);\n    setIsEdit(true);\n    setEditedId(id);\n    setOpen(true);\n  };\n\n  const deleteTicket = id => {\n    onDelToDo(id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"my-todo-list-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"btn-add\",\n    onClick: handleClickNewTicket,\n    startIcon: /*#__PURE__*/React.createElement(AddBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Create ticket\"), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    PaperComponent: PaperComponent,\n    \"aria-labelledby\": \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    style: {\n      cursor: 'move'\n    },\n    id: \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Create new ticket\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-number\",\n    label: \"Number\",\n    onChange: handleChangeNumber,\n    value: currentNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-title\",\n    label: \"Title\",\n    placeholder: \"Enter title\",\n    multiline: true,\n    onChange: handleChangeTitle,\n    value: currentTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-estimation\",\n    label: \"Estimation\",\n    onChange: handleChangeEstimation,\n    type: \"number\",\n    value: currentEstimation,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: currentStatus,\n    onChange: handleChangeSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"toDo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, \"toDo\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"inProgress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, \"inProgress\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"archive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, \"archive\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, \"done\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-desc\",\n    label: \"Description\",\n    placeholder: \"Enter description\",\n    multiline: true,\n    rows: 4,\n    onChange: handleChangeDescription,\n    value: currentDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: addUpdateTask,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"Add\")))), newToDoList && newToDoList.map((element, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"single-ticket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"single-ticket__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, element.number), \" \", element.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"single-ticket__details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, \"Status: \", element.status), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, \"Estimation: \", element.estimation, \" SP\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"single-ticket__desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, \"Description:\"), \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, element.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btns-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn-another\",\n    startIcon: /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 28\n      }\n    }),\n    variant: \"outlined\",\n    onClick: () => editTicket(element.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, \"EDIT\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn-another\",\n    startIcon: /*#__PURE__*/React.createElement(Delete, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 28\n      }\n    }),\n    variant: \"outlined\",\n    onClick: () => deleteTicket(element.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, \"DELETE\")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    newToDoList: state.mainToDoList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNewToDo: (id, number, title, estimation, status, description) => dispatch({\n      type: actionTypes.ADD_NEW_TICKET,\n      newId: id,\n      currentNumber: number,\n      currentTitle: title,\n      currentEstimation: estimation,\n      curentStatus: status,\n      currentDescription: description\n    }),\n    onEditToDo: (id, number, title, estimation, status, description) => dispatch({\n      type: actionTypes.EDIT_TICKET,\n      newId: id,\n      currentNumber: number,\n      currentTitle: title,\n      currentEstimation: estimation,\n      curentStatus: status,\n      currentDescription: description\n    }),\n    onDelToDo: id => dispatch({\n      type: actionTypes.DELETE_TICKET,\n      idToDelete: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyToDoList);","map":{"version":3,"sources":["/Users/liwia/Documents/Prywatne/rekrutacja/my-todo-list/src/components/MyToDoList/MyToDoList.js"],"names":["React","useState","Draggable","connect","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Select","MenuItem","AddBox","Delete","Edit","Paper","actionTypes","PaperComponent","props","MyToDoList","newToDoList","onNewToDo","onEditToDo","onDelToDo","open","setOpen","currentNumber","setCurrentNumber","currentTitle","setCurrentTitle","currentEstimation","setCurrentEstimation","currentStatus","setCurrentStatus","currentDescription","setCurrentDescription","isEdit","setIsEdit","editedId","setEditedId","handleClickNewTicket","resetFields","handleClose","getNextId","length","newId","forEach","element","id","addUpdateTask","handleChangeNumber","event","target","value","handleChangeTitle","handleChangeEstimation","handleChangeSelect","handleChangeDescription","editTicket","currentData","number","title","estimation","status","description","deleteTicket","cursor","shrink","map","index","mapStateToProps","state","mainToDoList","mapDispatchToProps","dispatch","type","ADD_NEW_TICKET","curentStatus","EDIT_TICKET","DELETE_TICKET","idToDelete"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport { connect } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { AddBox, Delete, Edit } from '@material-ui/icons';\nimport Paper from '@material-ui/core/Paper';\n\nimport * as actionTypes from '../../store/actions';\n\nimport './MyToDoList.scss';\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nconst MyToDoList = ({newToDoList, onNewToDo, onEditToDo, onDelToDo}) => {\n  const [open, setOpen] = useState(false);\n  const [currentNumber, setCurrentNumber] = useState('');\n  const [currentTitle, setCurrentTitle] = useState('');\n  const [currentEstimation, setCurrentEstimation] = useState(0);\n  const [currentStatus, setCurrentStatus] = useState('toDo');\n  const [currentDescription, setCurrentDescription] = useState('');\n  const [isEdit, setIsEdit] = useState(false);\n  const [editedId, setEditedId] = useState(null);\n\n  const handleClickNewTicket = () => {\n    setOpen(true);\n    setIsEdit(false);\n  };\n\n  const resetFields = () => {\n    setIsEdit(false);\n    setCurrentNumber('')\n    setCurrentTitle('')\n    setCurrentEstimation(0);\n    setCurrentStatus('toDo');\n    setCurrentDescription('');\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n    setIsEdit(false);\n    resetFields()\n  };\n\n  const getNextId = () => {\n    if (newToDoList.length) {\n      let newId = 0;\n      newToDoList.forEach((element) => {\n        if (element.id > newId) {\n          newId = element.id\n        }\n\n      })\n      return newId + 1;\n    } else {\n      return 1\n    }\n  };\n\n  const addUpdateTask = () => {\n    if (isEdit) {\n      onEditToDo(editedId, currentNumber, currentTitle, currentEstimation, currentStatus, currentDescription);\n    } else {\n      onNewToDo(getNextId(), currentNumber, currentTitle, currentEstimation, currentStatus, currentDescription);\n    }\n    setIsEdit(false);\n    resetFields()\n    setOpen(false);\n  };\n\n  const handleChangeNumber = (event) => (\n    setCurrentNumber(event.target.value)\n  );\n\n  const handleChangeTitle = (event) => (\n    setCurrentTitle(event.target.value)\n  );\n\n  const handleChangeEstimation = (event) => (\n    setCurrentEstimation(event.target.value)\n  );\n\n  const handleChangeSelect = (event) => (\n    setCurrentStatus(event.target.value)\n  );\n\n  const handleChangeDescription = (event) => (\n    setCurrentDescription(event.target.value)\n  );\n\n  const editTicket = (id) => {\n\n    let currentData;\n    newToDoList.forEach(element => {\n      if (element.id ===id) {\n        currentData = element\n      }\n    });\n    setCurrentNumber(currentData.number)\n    setCurrentTitle(currentData.title)\n    setCurrentEstimation(currentData.estimation);\n    setCurrentStatus(currentData.status);\n    setCurrentDescription(currentData.description)\n    setIsEdit(true);\n    setEditedId(id);\n    setOpen(true);\n  };\n\n  const deleteTicket = (id) => {\n    onDelToDo(id)\n  };\n\n\n  return (\n    <section className='my-todo-list-content'>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className='btn-add'\n        onClick={handleClickNewTicket}\n        startIcon={<AddBox />}\n      >\n        Create ticket\n      </Button>\n      <>\n\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n            Create new ticket\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <form className=\"form-content\">\n                <TextField\n                  id=\"input-number\"\n                  label=\"Number\"\n                  onChange={handleChangeNumber}\n                  value={currentNumber}\n                />\n                <br />\n                <TextField\n                  id=\"input-title\"\n                  label=\"Title\"\n                  placeholder=\"Enter title\"\n                  multiline\n                  onChange={handleChangeTitle}\n                  value={currentTitle}\n                />\n                <br />\n                <TextField\n                  id=\"input-estimation\"\n                  label=\"Estimation\"\n                  onChange={handleChangeEstimation}\n                  type=\"number\"\n                  value={currentEstimation}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n\n                />\n                <br />\n                <label>Status</label>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={currentStatus}\n                  onChange={handleChangeSelect}\n                >\n                  <MenuItem value='toDo'>toDo</MenuItem>\n                  <MenuItem value='inProgress' >inProgress</MenuItem>\n                  <MenuItem value='archive'>archive</MenuItem>\n                  <MenuItem value='done'>done</MenuItem>\n                </Select>\n                <br />\n                <TextField\n                  id=\"input-desc\"\n                  label=\"Description\"\n                  placeholder=\"Enter description\"\n                  multiline\n                  rows={4}\n                  onChange={handleChangeDescription}\n                  value={currentDescription}\n                />\n              </form>\n            </DialogContentText>\n\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={addUpdateTask} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n\n      {\n        newToDoList && newToDoList.map( (element, index) => (\n          <div key={index} className=\"single-ticket\">\n            <h1 className=\"single-ticket__title\">\n              <span>{element.number}</span> {element.title}\n            </h1>\n            <div className=\"single-ticket__details\">\n              <span>Status: {element.status}</span>\n              <span>Estimation: {element.estimation} SP</span>\n            </div>\n            <div className=\"single-ticket__desc\">\n              <span><i>Description:</i> </span>\n              <span>{element.description}</span>\n            </div>\n\n            <div className=\"btns-content\">\n              <Button\n                color=\"primary\"\n                className='btn-another'\n                startIcon={<Edit />}\n                variant=\"outlined\"\n                onClick={() => editTicket(element.id)}\n              >\n                EDIT\n              </Button>\n\n              <Button\n                color=\"primary\"\n                className='btn-another'\n                startIcon={<Delete />}\n                variant=\"outlined\"\n                onClick={() => deleteTicket(element.id)}\n              >\n                DELETE\n              </Button>\n            </div>\n          </div>\n\n        ))\n      }\n    </section>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    newToDoList: state.mainToDoList,\n  };\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return {\n    onNewToDo: (id, number, title, estimation, status, description) => dispatch({type: actionTypes.ADD_NEW_TICKET,\n                                                        newId: id,\n                                                        currentNumber: number,\n                                                        currentTitle: title,\n                                                        currentEstimation: estimation,\n                                                        curentStatus: status,\n                                                        currentDescription: description}),\n    onEditToDo: (id, number, title, estimation, status, description) => dispatch({type: actionTypes.EDIT_TICKET,\n                                                        newId: id,\n                                                        currentNumber: number,\n                                                        currentTitle: title,\n                                                        currentEstimation: estimation,\n                                                        curentStatus: status,\n                                                        currentDescription: description}),\n    onDelToDo: (id) => dispatch({\n      type: actionTypes.DELETE_TICKET,\n      idToDelete: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyToDoList);\n"]},"metadata":{},"sourceType":"module"}